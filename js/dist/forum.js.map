{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@justoverclock/random-post/webpack/bootstrap","webpack://@justoverclock/random-post/webpack/runtime/compat get default export","webpack://@justoverclock/random-post/webpack/runtime/define property getters","webpack://@justoverclock/random-post/webpack/runtime/hasOwnProperty shorthand","webpack://@justoverclock/random-post/webpack/runtime/make namespace object","webpack://@justoverclock/random-post/external root \"flarum.core.compat['forum/app']\"","webpack://@justoverclock/random-post/external root \"flarum.core.compat['forum/components/DiscussionList']\"","webpack://@justoverclock/random-post/external root \"flarum.core.compat['common/extend']\"","webpack://@justoverclock/random-post/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@justoverclock/random-post/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@justoverclock/random-post/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","import app from 'flarum/forum/app';\nimport DiscussionList from 'flarum/forum/components/DiscussionList';\nimport {extend} from 'flarum/common/extend';\nimport DiscussionListItem from \"flarum/forum/components/DiscussionListItem\";\nimport IndexPage from \"flarum/forum/components/IndexPage\";\n\n\napp.initializers.add('justoverclock/random-post', () => {\n  extend(DiscussionList.prototype, 'oninit', function () {\n    app.store\n      .find('posts', {\n        include: 'discussion,user',\n      })\n      .then((results) => {\n        this.randomPostOne = results[Math.floor(Math.random() * results.length)];\n        this.randomPostTwo = results[Math.floor(Math.random() * results.length)];\n        this.randomPostTree = results[Math.floor(Math.random() * results.length)];\n      })\n  })\n  extend(DiscussionList.prototype, 'view', function (vdom) {\n\n\n    if (app.current.matches(IndexPage)) {\n      m.redraw()\n    }\n\n\n    vdom.children.forEach(vdom => {\n\n      // Find the child with class .DiscussionList-discussions\n      if (!vdom || !vdom.attrs || vdom.attrs.className !== 'DiscussionList-discussions') {\n        return;\n      }\n\n      let discussionIndex = 0;\n\n      vdom.children.forEach(mapGroup => {\n\n\n        // All children should be Mithril virtual group nodes \"[\" but we'll make sure no `null` or `undefined` got in here\n        if (!mapGroup || !mapGroup.children) {\n          return;\n        }\n\n        // Clone array so inserting new items into the original array doesn't cause the loop to skip items\n        [...mapGroup.children].forEach((li) => {\n          // Verify each child is an li containing a DiscussionListItem, this way we are not counting items added by other extensions\n          if (li.tag !== 'li' || !li.children || !li.children.length || !li.children[0] || li.children[0].tag !== DiscussionListItem) {\n            return;\n          }\n\n          // Add index to the DOM so it can be used from CSS\n          li.attrs['data-index'] = discussionIndex;\n\n          // Add content above each group of 3 discussions\n          if (discussionIndex === 1) {\n\n\n            // Use indexOf() to get the up to date index of the current element, since adding items will shift the index of next items\n            mapGroup.children.splice(mapGroup.children.indexOf(li), 0,\n              <div id=\"random-post-one\">\n                <div className=\"random-post-content\">\n                  <p className=\"random-post-text\" id=\"random-post-text\">\n                    {this.randomPostOne && this.randomPostOne.data.attributes.contentHtml.replace(/<\\/?[^>]+(>|$)/g, '').substr(0, 200)}\n                  </p>\n                  <div className=\"random-post-info\">\n                    <div className=\"random-post-author\" id=\"random-post-author\">\n                      <a\n                        href={this.randomPostOne && 'u/' + this.randomPostOne.user().data.attributes.slug}>{this.randomPostOne && this.randomPostOne.user().displayName()}</a> in\n                      the <a href={this.randomPostOne && 'd/' + this.randomPostOne.discussion().data.attributes.slug}>\n                      {this.randomPostOne && this.randomPostOne.discussion().data.attributes.title}</a>\n                    </div>\n                  </div>\n                </div>\n              </div>);\n          } else if (discussionIndex === 10) {\n            mapGroup.children.splice(mapGroup.children.indexOf(li), 0,\n              <div id=\"random-post-one\">\n                <div className=\"random-post-content\">\n                  <p className=\"random-post-text\" id=\"random-post-text\">\n                    {this.randomPostTwo && this.randomPostTwo.data.attributes.contentHtml.replace(/<\\/?[^>]+(>|$)/g, '').substr(0, 200)}\n                  </p>\n                  <div className=\"random-post-info\">\n                    <div className=\"random-post-author\" id=\"random-post-author\">\n                      <a\n                        href={this.randomPostTwo && 'u/' + this.randomPostTwo.user().data.attributes.slug}>{this.randomPostTwo && this.randomPostTwo.user().displayName()}</a> in\n                      the <a href={this.randomPostTwo && 'd/' + this.randomPostTwo.discussion().data.attributes.slug}>\n                      {this.randomPostTwo && this.randomPostTwo.discussion().data.attributes.title}</a>\n                    </div>\n                  </div>\n                </div>\n              </div>);\n          } else if (discussionIndex === 19) {\n            mapGroup.children.splice(mapGroup.children.indexOf(li), 0,\n              <div id=\"random-post-one\">\n                <div className=\"random-post-content\">\n                  <p className=\"random-post-text\" id=\"random-post-text\">\n                    {this.randomPostTree && this.randomPostTree.data.attributes.contentHtml.replace(/<\\/?[^>]+(>|$)/g, '').substr(0, 200)}\n                  </p>\n                  <div className=\"random-post-info\">\n                    <div className=\"random-post-author\" id=\"random-post-author\">\n                      <a\n                        href={this.randomPostTree && 'u/' + this.randomPostTree.user().data.attributes.slug}>{this.randomPostTree && this.randomPostTree.user().displayName()}</a> in\n                      the <a href={this.randomPostTree && 'd/' + this.randomPostTree.discussion().data.attributes.slug}>\n                      {this.randomPostTree && this.randomPostTree.discussion().data.attributes.title}</a>\n                    </div>\n                  </div>\n                </div>\n              </div>);\n          }\n\n          discussionIndex++;\n        });\n      });\n    });\n  });\n});\n\n\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","extend","DiscussionList","include","then","results","randomPostOne","Math","floor","random","length","randomPostTwo","randomPostTree","vdom","IndexPage","m","redraw","children","forEach","attrs","className","discussionIndex","mapGroup","li","tag","DiscussionListItem","splice","indexOf","id","data","attributes","contentHtml","replace","substr","href","user","slug","displayName","discussion","title"],"sourceRoot":""}